{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADITYA DWIVEDI\\\\Desktop\\\\Redux\\\\Posts\\\\src\\\\features\\\\posts\\\\AddPostFrom.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postAdded } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPostForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [userId, setUserId] = useState('');\n  const users = useSelector(selectAllUsers);\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onAuthorChanged = e => setUserId(e.target.value);\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postAdded(title, content, userId));\n      setTitle('');\n      setContent('');\n    }\n  };\n  const canSave = Boolean(title) && Boolean(content) && Boolean(userId);\n  const usersOptions = users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: user.id,\n    children: user.name\n  }, user.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"Post Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postAuthor\",\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"postAuthor\",\n        value: userId,\n        onChange: onAuthorChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), usersOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postContent\",\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostClicked,\n        disabled: !canSave,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(AddPostForm, \"5Nlyq/QP7z3Bi/mQPuDw13MjzcA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AddPostForm;\nexport default AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["useState","useDispatch","useSelector","postAdded","selectAllUsers","jsxDEV","_jsxDEV","AddPostForm","_s","dispatch","title","setTitle","content","setContent","userId","setUserId","users","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","onSavePostClicked","canSave","Boolean","usersOptions","map","user","id","children","name","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ADITYA DWIVEDI/Desktop/Redux/Posts/src/features/posts/AddPostFrom.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { postAdded } from \"./postsSlice\";\r\nimport { selectAllUsers } from \"../users/usersSlice\";\r\n\r\nconst AddPostForm = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [content, setContent] = useState('')\r\n    const [userId, setUserId] = useState('')\r\n\r\n    const users = useSelector(selectAllUsers)\r\n\r\n    const onTitleChanged = e => setTitle(e.target.value)\r\n    const onContentChanged = e => setContent(e.target.value)\r\n    const onAuthorChanged = e => setUserId(e.target.value)\r\n\r\n    const onSavePostClicked = () => {\r\n        if (title && content) {\r\n            dispatch(\r\n                postAdded(title, content, userId)\r\n            )\r\n            setTitle('')\r\n            setContent('')\r\n        }\r\n    }\r\n\r\n    const canSave = Boolean(title) && Boolean(content) && Boolean(userId)\r\n\r\n    const usersOptions = users.map(user => (\r\n        <option key={user.id} value={user.id}>\r\n            {user.name}\r\n        </option>\r\n    ))\r\n\r\n    return (\r\n        <section>\r\n            <h2>Add a New Post</h2>\r\n            <form>\r\n                <label htmlFor=\"postTitle\">Post Title:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"postTitle\"\r\n                    name=\"postTitle\"\r\n                    value={title}\r\n                    onChange={onTitleChanged}\r\n                />\r\n                <label htmlFor=\"postAuthor\">Author:</label>\r\n                <select id=\"postAuthor\" value={userId} onChange={onAuthorChanged}>\r\n                    <option value=\"\"></option>\r\n                    {usersOptions}\r\n                </select>\r\n                <label htmlFor=\"postContent\">Content:</label>\r\n                <textarea\r\n                    id=\"postContent\"\r\n                    name=\"postContent\"\r\n                    value={content}\r\n                    onChange={onContentChanged}\r\n                />\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={onSavePostClicked}\r\n                    disabled={!canSave}\r\n                >Save Post</button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\nexport default AddPostForm"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,cAAc,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMgB,KAAK,GAAGd,WAAW,CAACE,cAAc,CAAC;EAEzC,MAAMa,cAAc,GAAGC,CAAC,IAAIP,QAAQ,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACpD,MAAMC,gBAAgB,GAAGH,CAAC,IAAIL,UAAU,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACxD,MAAME,eAAe,GAAGJ,CAAC,IAAIH,SAAS,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAEtD,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIb,KAAK,IAAIE,OAAO,EAAE;MAClBH,QAAQ,CACJN,SAAS,CAACO,KAAK,EAAEE,OAAO,EAAEE,MAAM,CACpC,CAAC;MACDH,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EAED,MAAMW,OAAO,GAAGC,OAAO,CAACf,KAAK,CAAC,IAAIe,OAAO,CAACb,OAAO,CAAC,IAAIa,OAAO,CAACX,MAAM,CAAC;EAErE,MAAMY,YAAY,GAAGV,KAAK,CAACW,GAAG,CAACC,IAAI,iBAC/BtB,OAAA;IAAsBc,KAAK,EAAEQ,IAAI,CAACC,EAAG;IAAAC,QAAA,EAChCF,IAAI,CAACG;EAAI,GADDH,IAAI,CAACC,EAAE;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEZ,CACX,CAAC;EAEF,oBACI7B,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAI;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB7B,OAAA;MAAAwB,QAAA,gBACIxB,OAAA;QAAO8B,OAAO,EAAC,WAAW;QAAAN,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9C7B,OAAA;QACI+B,IAAI,EAAC,MAAM;QACXR,EAAE,EAAC,WAAW;QACdE,IAAI,EAAC,WAAW;QAChBX,KAAK,EAAEV,KAAM;QACb4B,QAAQ,EAAErB;MAAe;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACF7B,OAAA;QAAO8B,OAAO,EAAC,YAAY;QAAAN,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3C7B,OAAA;QAAQuB,EAAE,EAAC,YAAY;QAACT,KAAK,EAAEN,MAAO;QAACwB,QAAQ,EAAEhB,eAAgB;QAAAQ,QAAA,gBAC7DxB,OAAA;UAAQc,KAAK,EAAC;QAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,EACzBT,YAAY;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACT7B,OAAA;QAAO8B,OAAO,EAAC,aAAa;QAAAN,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7C7B,OAAA;QACIuB,EAAE,EAAC,aAAa;QAChBE,IAAI,EAAC,aAAa;QAClBX,KAAK,EAAER,OAAQ;QACf0B,QAAQ,EAAEjB;MAAiB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACF7B,OAAA;QACI+B,IAAI,EAAC,QAAQ;QACbE,OAAO,EAAEhB,iBAAkB;QAC3BiB,QAAQ,EAAE,CAAChB,OAAQ;QAAAM,QAAA,EACtB;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAElB,CAAC;AAAA3B,EAAA,CA/DKD,WAAW;EAAA,QACIN,WAAW,EAMdC,WAAW;AAAA;AAAAuC,EAAA,GAPvBlC,WAAW;AAgEjB,eAAeA,WAAW;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}