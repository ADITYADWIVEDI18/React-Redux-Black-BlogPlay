{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADITYA DWIVEDI\\\\Desktop\\\\Redux\\\\Posts\\\\src\\\\features\\\\posts\\\\AddPostFrom.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { nanoid } from \"@reduxjs/toolkit\"; \n//Provide Id to the items, already in redux no need to install like we do in react.\n\nimport { postAdded } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPostFrom = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [userId, setuserId] = useState('');\n  const users = useSelector(selectAllUsers);\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onAuthorChanged = e => setUserId(e.target.value);\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postAdded(userId, title, content));\n      setTitle('');\n      setContent('');\n    }\n  };\n  const canSave = Boolean(title) && Boolean(content) && Boolean(userId);\n  const usersOptions = users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: user.id,\n    children: user.name\n  }, user.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"Post Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postAuthor\",\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"postAuthor\",\n        value: userId,\n        onChanged: onAuthorChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 18\n        }, this), usersOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postContent\",\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostClicked,\n        disabled: !canSave,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AddPostFrom, \"QSyNY0kuH4wKMb7O2Ivr8rYFvoQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AddPostFrom;\nexport default AddPostFrom;\nvar _c;\n$RefreshReg$(_c, \"AddPostFrom\");","map":{"version":3,"names":["useState","useDispatch","useSelector","postAdded","selectAllUsers","jsxDEV","_jsxDEV","AddPostFrom","_s","dispatch","title","setTitle","content","setContent","userId","setuserId","users","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","setUserId","onSavePostClicked","canSave","Boolean","usersOptions","map","user","id","children","name","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","onChanged","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ADITYA DWIVEDI/Desktop/Redux/Posts/src/features/posts/AddPostFrom.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch , useSelector } from \"react-redux\";\r\n// import { nanoid } from \"@reduxjs/toolkit\"; \r\n//Provide Id to the items, already in redux no need to install like we do in react.\r\n\r\nimport { postAdded } from \"./postsSlice\";\r\nimport { selectAllUsers } from \"../users/usersSlice\";\r\n\r\n\r\nconst AddPostFrom = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [title,setTitle] = useState('')\r\n    const [content,setContent] = useState('')\r\n    const [userId,setuserId] = useState('')\r\n\r\n    const users = useSelector(selectAllUsers)\r\n\r\n    const onTitleChanged = e =>setTitle(e.target.value)\r\n    const onContentChanged = e => setContent(e.target.value)\r\n    const onAuthorChanged = e => setUserId(e.target.value)\r\n\r\n\r\n    const onSavePostClicked = () =>{\r\n        if(title && content){\r\n            dispatch(\r\n                postAdded(\r\n                    userId, \r\n                    title,\r\n                    content\r\n                )\r\n            )\r\n\r\n            setTitle('')\r\n            setContent('')\r\n        }\r\n    }\r\n\r\n    const canSave = Boolean(title) && Boolean(content) && Boolean(userId)\r\n\r\n    const usersOptions = users.map(user=>(\r\n        <option key={user.id} value={user.id}>\r\n            {user.name}\r\n        </option>\r\n    ))\r\n\r\n  return (\r\n    <section>\r\n        <h2>Add a New Post</h2>\r\n        <form>\r\n            <label htmlFor=\"postTitle\">Post Title:</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"postTitle\"\r\n                name=\"postTitle\"\r\n                value={title}\r\n                onChange={onTitleChanged}\r\n                />\r\n            <label htmlFor=\"postAuthor\">Author:</label>\r\n            <select id=\"postAuthor\" value={userId} onChanged={onAuthorChanged}>\r\n                 <option value=\"\"></option>\r\n                 {usersOptions}\r\n            </select>\r\n\r\n            <label htmlFor=\"postContent\">Content:</label>\r\n             <textarea\r\n                id=\"postContent\"\r\n                name=\"postContent\"\r\n                value={content}\r\n                onChange={onContentChanged}\r\n                />\r\n             <button \r\n             type=\"button\"\r\n             onClick={onSavePostClicked}\r\n             disabled={!canSave}\r\n             >Save Post</button>\r\n            \r\n        </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AddPostFrom"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}