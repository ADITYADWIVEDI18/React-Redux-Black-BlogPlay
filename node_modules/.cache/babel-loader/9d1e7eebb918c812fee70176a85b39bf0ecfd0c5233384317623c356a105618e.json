{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADITYA DWIVEDI\\\\Desktop\\\\Redux\\\\Posts\\\\src\\\\features\\\\posts\\\\AddPostFrom.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nanoid } from \"@reduxjs/toolkit\";\n//Provide Id to the items, already in redux no need to install like we do in react.\n\nimport { postAdded } from \"./postsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPostFrom = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postAdded({\n        id: nanoid(),\n        title,\n        content\n      }));\n      setTitle('');\n      setContent('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"Post Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postContent\",\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostClicked,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AddPostFrom, \"R1TU7hMHBAVfJxYNa44GmQSfwtA=\", false, function () {\n  return [useDispatch];\n});\n_c = AddPostFrom;\nexport default AddPostFrom;\nvar _c;\n$RefreshReg$(_c, \"AddPostFrom\");","map":{"version":3,"names":["useState","useDispatch","nanoid","postAdded","jsxDEV","_jsxDEV","AddPostFrom","_s","dispatch","title","setTitle","content","setContent","onTitleChanged","e","target","value","onContentChanged","onSavePostClicked","id","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ADITYA DWIVEDI/Desktop/Redux/Posts/src/features/posts/AddPostFrom.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { nanoid } from \"@reduxjs/toolkit\"; \r\n//Provide Id to the items, already in redux no need to install like we do in react.\r\n\r\nimport { postAdded } from \"./postsSlice\";\r\n\r\nconst AddPostFrom = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [title,setTitle] = useState('')\r\n    const [content,setContent] = useState('')\r\n\r\n    const onTitleChanged = e =>setTitle(e.target.value)\r\n    const onContentChanged = e => setContent(e.target.value)\r\n\r\n\r\n    const onSavePostClicked = () =>{\r\n        if(title && content){\r\n            dispatch(\r\n                postAdded({\r\n                    id:nanoid(),\r\n                    title,\r\n                    content\r\n                })\r\n            )\r\n\r\n            setTitle('')\r\n            setContent('')\r\n        }\r\n    }\r\n\r\n  return (\r\n    <section>\r\n        <h2>Add a New Post</h2>\r\n        <form>\r\n            <label htmlFor=\"postTitle\">Post Title:</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"postTitle\"\r\n                name=\"postTitle\"\r\n                value={title}\r\n                onChange={onTitleChanged}\r\n                />\r\n             <label htmlFor=\"postContent\">Content:</label>\r\n             <textarea\r\n                id=\"postContent\"\r\n                name=\"postContent\"\r\n                value={content}\r\n                onChange={onContentChanged}\r\n                />\r\n             <button \r\n             type=\"button\"\r\n             onClick={onSavePostClicked}\r\n             >Save Post</button>\r\n            \r\n        </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AddPostFrom"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,MAAM,QAAQ,kBAAkB;AACzC;;AAEA,SAASC,SAAS,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,KAAK,EAACC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACW,OAAO,EAACC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEzC,MAAMa,cAAc,GAAGC,CAAC,IAAGJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACnD,MAAMC,gBAAgB,GAAGH,CAAC,IAAIF,UAAU,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAGxD,MAAME,iBAAiB,GAAGA,CAAA,KAAK;IAC3B,IAAGT,KAAK,IAAIE,OAAO,EAAC;MAChBH,QAAQ,CACJL,SAAS,CAAC;QACNgB,EAAE,EAACjB,MAAM,CAAC,CAAC;QACXO,KAAK;QACLE;MACJ,CAAC,CACL,CAAC;MAEDD,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EAEH,oBACEP,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBnB,OAAA;MAAAe,QAAA,gBACIf,OAAA;QAAOoB,OAAO,EAAC,WAAW;QAAAL,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9CnB,OAAA;QACIqB,IAAI,EAAC,MAAM;QACXP,EAAE,EAAC,WAAW;QACdQ,IAAI,EAAC,WAAW;QAChBX,KAAK,EAAEP,KAAM;QACbmB,QAAQ,EAAEf;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACLnB,OAAA;QAAOoB,OAAO,EAAC,aAAa;QAAAL,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7CnB,OAAA;QACGc,EAAE,EAAC,aAAa;QAChBQ,IAAI,EAAC,aAAa;QAClBX,KAAK,EAAEL,OAAQ;QACfiB,QAAQ,EAAEX;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACLnB,OAAA;QACAqB,IAAI,EAAC,QAAQ;QACbG,OAAO,EAAEX,iBAAkB;QAAAE,QAAA,EAC1B;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd,CAAC;AAAAjB,EAAA,CArDKD,WAAW;EAAA,QAEIL,WAAW;AAAA;AAAA6B,EAAA,GAF1BxB,WAAW;AAuDjB,eAAeA,WAAW;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}